{"version":3,"sources":["components/ExperienceCard.tsx","components/Experience.tsx","components/Tech.tsx","components/Contact.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ExperienceCard","title","company","timespan","details","React","showDetails","toggleDetails","className","onClick","e","Experience","Tech","src","width","alt","Contact","useState","Boolean","showSnackbar","setShowSnackbar","name","setName","email","setEmail","message","setMessage","invalidName","setInvalidName","invalidEmail","setInvalidEmail","invalidMessage","setInvalidMessage","handleSubmit","a","test","params","emailjs","send","then","response","err","console","log","noValidate","autoComplete","TextField","id","label","variant","type","onChange","target","value","error","multiline","rows","placeholder","Button","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","App","height","aria-hidden","focusable","role","xmlns","viewBox","fill","d","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.55660762.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport interface ExperienceCardProps {\r\n\ttitle: string,\r\n\tcompany: string,\r\n\ttimespan: string,\r\n\tdetails: React.ReactNode\r\n}\r\n\r\nconst ExperienceCard: React.SFC<ExperienceCardProps> = ({ title, company, timespan, details }) => {\r\n\tconst [showDetails, toggleDetails] = React.useState(false);\r\n\r\n\treturn <div className=\"card mt-4\">\r\n\t\t<div className=\"card-body\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12 col-md-6\">\r\n\t\t\t\t\t<h5 className=\"card-title\">{title}</h5>\r\n\t\t\t\t\t<h6 className=\"card-subtitle mb-2\">{company}</h6>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 time-span\">\r\n\t\t\t\t\t<h6 className=\"card-subtitle mb-2\">{timespan}</h6>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p className=\"text-link\" onClick={e => toggleDetails(!showDetails)}>\r\n\t\t\t\t{showDetails ? 'Hide' : 'Read More'}\r\n      </p>\r\n\r\n\t\t\t{showDetails && details}\r\n\t\t</div>\r\n\t</div>;\r\n}\r\n\r\nexport default ExperienceCard;","import React from 'react';\r\nimport ExperienceCard from './ExperienceCard';\r\n\r\nconst Experience = () => {\r\n\treturn <>\r\n\t\t<div className=\"section-light\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<h1>Experience</h1>\r\n\r\n\t\t\t\t<ExperienceCard\r\n\t\t\t\t\ttitle=\"Analyst Software Engineer\"\r\n\t\t\t\t\tcompany=\"Afiniti\"\r\n\t\t\t\t\ttimespan=\"Nov 2019 to Current\"\r\n\t\t\t\t\tdetails={<>\r\n\t\t\t\t\t\t<p className=\"card-text mt-4\">My work includes the following technologies:</p>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Javascript</li>\r\n\t\t\t\t\t\t\t\t\t<li>Typescript</li>\r\n\t\t\t\t\t\t\t\t\t<li>Git</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>React</li>\r\n\t\t\t\t\t\t\t\t\t<li>Redux</li>\r\n\t\t\t\t\t\t\t\t\t<li>Next.js</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Node</li>\r\n\t\t\t\t\t\t\t\t\t<li>Express</li>\r\n\t\t\t\t\t\t\t\t\t<li>Nest.js</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Postgres</li>\r\n\t\t\t\t\t\t\t\t\t<li>MongoDB</li>\r\n\t\t\t\t\t\t\t\t\t<li>SCSS</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>}\r\n\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t<ExperienceCard\r\n\t\t\t\t\ttitle=\"Associate Software Engineer\"\r\n\t\t\t\t\tcompany=\"Novatore Solutions\"\r\n\t\t\t\t\ttimespan=\"Jul 2019 to Nov 2019\"\r\n\t\t\t\t\tdetails={<>\r\n\t\t\t\t\t\t<p className=\"card-text mt-4\">My work includes the following technologies:</p>\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Javascript</li>\r\n\t\t\t\t\t\t\t\t\t<li>Typescript</li>\r\n\t\t\t\t\t\t\t\t\t<li>Git</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>React</li>\r\n\t\t\t\t\t\t\t\t\t<li>Redux</li>\r\n\t\t\t\t\t\t\t\t\t<li>Angular</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>Node</li>\r\n\t\t\t\t\t\t\t\t\t<li>Express</li>\r\n\t\t\t\t\t\t\t\t\t<li>Loopback</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"col-12 col-md-3\">\r\n\t\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t\t<li>MongoDB</li>\r\n\t\t\t\t\t\t\t\t\t<li>CSS</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>}\r\n\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>;\r\n}\r\n\r\nexport default Experience;","import React from 'react';\r\n\r\nconst Tech = () => {\r\n\treturn <>\r\n\t\t<div className=\"section-light\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<h1>Tech</h1>\r\n\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/react.png\" width=\"100%\" className=\"tech-img\" alt=\"react\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/redux.png\" width=\"100%\" className=\"tech-img\" alt=\"redux\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/next.png\" width=\"100%\" className=\"tech-img\" alt=\"next\" /></div>\r\n\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/node.png\" width=\"100%\" className=\"tech-img\" alt=\"node\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/express.png\" width=\"100%\" className=\"tech-img\" alt=\"express\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/nest.png\" width=\"100%\" className=\"tech-img\" alt=\"nest\" /></div>\r\n\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/typescript.png\" width=\"100%\" className=\"tech-img\" alt=\"typescript\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/mongoDB.png\" width=\"100%\" className=\"tech-img\" alt=\"mongodb\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/postgres.png\" width=\"100%\" className=\"tech-img\" alt=\"postgres\" /></div>\r\n\t\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/git.png\" width=\"100%\" className=\"tech-img\" alt=\"git\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/sass.png\" width=\"100%\" className=\"tech-img\" alt=\"sass\" /></div>\r\n\t\t\t\t\t<div className=\"col-6 col-md-3\"><img src=\"assets/img/aws.png\" width=\"100%\" className=\"tech-img\" alt=\"aws\" /></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>;\r\n}\r\n\r\nexport default Tech;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport emailjs from \"emailjs-com\";\r\n\r\nconst Contact = () => {\r\n  const [showSnackbar, setShowSnackbar] = React.useState(Boolean);\r\n  const [name, setName] = React.useState<null | string>('');\r\n  const [email, setEmail] = React.useState<null | string>('');\r\n  const [message, setMessage] = React.useState<null | string>('');\r\n\r\n  const [invalidName, setInvalidName] = React.useState(false);\r\n  const [invalidEmail, setInvalidEmail] = React.useState(false);\r\n  const [invalidMessage, setInvalidMessage] = React.useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!name) setInvalidName(true);\r\n    if (!(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email!))) setInvalidEmail(true);\r\n    if (!message) setInvalidMessage(true);\r\n\r\n    if (name && email && message) {\r\n\r\n      const params = {\r\n        name, email, message\r\n      }\r\n\r\n      emailjs.send('service_k5kie1e', 'template_0xbsfcj', params, 'user_KCS4U8n1OHFm6OXOPrNee')\r\n        .then((response: any) => {\r\n          setName('');\r\n          setEmail('');\r\n          setMessage('');\r\n          setShowSnackbar(true);\r\n        }, (err: any) => {\r\n          console.log('FAILED', err);\r\n        });\r\n\r\n\r\n    }\r\n  }\r\n\r\n  const handleName = (e: any) => {\r\n    setName(e.target.value);\r\n    setInvalidName(false);\r\n  }\r\n\r\n  const handleEmail = (e: any) => {\r\n    setEmail(e.target.value);\r\n    setInvalidEmail(false);\r\n  }\r\n\r\n  const handleMessage = (e: any) => {\r\n    setMessage(e.target.value);\r\n    setInvalidMessage(false);\r\n  }\r\n\r\n  return <>\r\n    <div className=\"section-light\">\r\n      <div className=\"content\">\r\n        <h1>Lets Connect</h1>\r\n        <p>If you want to know more about me or my work, or if you would just like to say hello, send me a message. I'd love to hear from you.</p>\r\n\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-12 col-md-4 mb-3 order-md-2\">\r\n            <img src=\"assets/img/contact-dev.png\" className=\"w-100\" alt=\"Contact Muhammad Zeeshan\" />\r\n          </div>\r\n          <div className=\"col-12 col-md-8 mb-3 order-md-1\">\r\n            <form noValidate autoComplete=\"off\">\r\n              <TextField\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                className=\"w-100 mb-3\"\r\n                onChange={handleName}\r\n                error={invalidName}\r\n                value={name} />\r\n              <TextField\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                className=\"w-100 mb-3\"\r\n                onChange={handleEmail}\r\n                error={invalidEmail}\r\n                value={email} />\r\n              <TextField\r\n                id=\"message\"\r\n                label=\"Message\"\r\n                multiline\r\n                rows={4}\r\n                placeholder=\"Hey, How its going?\"\r\n                variant=\"outlined\"\r\n                className=\"w-100 mb-3\"\r\n                error={invalidMessage}\r\n                onChange={handleMessage}\r\n                value={message}\r\n              />\r\n              <Button variant=\"outlined\" className=\"w-25 mt-3\" onClick={handleSubmit}>Send</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <Snackbar\r\n          open={showSnackbar}\r\n          autoHideDuration={6000}\r\n          onClose={() => setShowSnackbar(!showSnackbar)}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\r\n          <Alert severity=\"success\">\r\n            Thanks for contacting\r\n          </Alert>\r\n        </Snackbar>\r\n      </div>\r\n    </div>\r\n  </>;\r\n}\r\n\r\nexport default Contact;","import React from 'react';\nimport Experience from './components/Experience';\nimport Tech from './components/Tech';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"main-container\">\n        <div className=\"navbar\">\n          <div className=\"title\">\n            <h1>MZ</h1>\n          </div>\n          {/* <div className=\"menu\">\n            <ul>\n              <li>Home</li>\n              <li>Experience</li>\n              <li>Tech</li>\n              <li>Contact</li>\n            </ul>\n          </div> */}\n        </div>\n        <div className=\"content\">\n          <div className=\"row\">\n            <div className=\"col-12 col-md-6\">\n              <p>Hi, I'm</p>\n              <h1>Muhammad Zeeshan</h1>\n              <h5>Analyst Software Engineer at Afiniti</h5>\n              <p>A self-taught Full Stack JavaScript Developer. I help founders add value to society by crafting software using JavaScript tools.</p>\n            </div>\n            <div className=\"col-12 col-md-6\">\n              <img src=\"assets/img/dev.svg\" alt=\"dev\" className=\"main-image\" />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"icons\">\n          <img src=\"assets/img/stackoverflow.svg\" width=\"50px\" height=\"50px\" alt=\"stackoverflow\" />\n          <img src=\"assets/img/github.svg\" width=\"50px\" height=\"50px\" alt=\"github\" />\n          <img src=\"assets/img/linkedin.svg\" width=\"50px\" height=\"50px\" alt=\"linkedin\" />\n        </div>\n      </div>\n\n      <div className=\"layout\">\n        <Experience />\n        <Tech />\n        <Contact />\n      </div>\n\n      <footer>\n        <div className=\"about\">\n          <h1>MZ</h1>\n        </div>\n        <div className=\"connect\">\n          <p>Follow me on</p>\n          <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path fill=\"currentColor\" d=\"M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z\"></path></svg>\n          <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 496 512\"><path fill=\"currentColor\" d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path></svg>\n          <svg aria-hidden=\"true\" focusable=\"false\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"></path></svg>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/main.scss\";\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}